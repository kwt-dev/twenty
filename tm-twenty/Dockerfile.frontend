# Base image for common dependencies
FROM node:22-alpine as common-deps

WORKDIR /app

# Copy only the necessary files for dependency resolution
COPY ./package.json ./yarn.lock ./.yarnrc.yml ./tsconfig.base.json ./nx.json /app/
COPY ./.yarn/releases /app/.yarn/releases
COPY ./.yarn/patches /app/.yarn/patches

COPY ./.prettierrc /app/
COPY ./packages/twenty-emails/package.json /app/packages/twenty-emails/
COPY ./packages/twenty-server/package.json /app/packages/twenty-server/
COPY ./packages/twenty-server/patches /app/packages/twenty-server/patches
COPY ./packages/twenty-ui/package.json /app/packages/twenty-ui/
COPY ./packages/twenty-shared/package.json /app/packages/twenty-shared/
COPY ./packages/twenty-front/package.json /app/packages/twenty-front/
COPY ./packages/trib-messages-module/package.json /app/packages/trib-messages-module/

# Install all dependencies
RUN yarn && yarn cache clean && npx nx reset


# Build only the frontend
FROM common-deps as twenty-front-build

ARG REACT_APP_SERVER_BASE_URL

COPY ./packages/twenty-front /app/packages/twenty-front
COPY ./packages/twenty-ui /app/packages/twenty-ui
COPY ./packages/twenty-shared /app/packages/twenty-shared

# Use Node.js memory optimization for large frontend build
RUN NODE_OPTIONS="--max-old-space-size=6144" npx nx build twenty-front


# Final stage: Serve the frontend with nginx
FROM nginx:alpine as twenty-frontend

# Install gettext for envsubst command
RUN apk add --no-cache gettext

# Copy built frontend from build stage
COPY --from=twenty-front-build /app/packages/twenty-front/build /usr/share/nginx/html

# Copy the runtime environment injection script
COPY --from=twenty-front-build /app/packages/twenty-front/scripts/inject-runtime-env.sh /usr/local/bin/inject-runtime-env.sh
RUN chmod +x /usr/local/bin/inject-runtime-env.sh

# Copy nginx template
COPY ./tm-twenty/nginx.conf.template /etc/nginx/templates/default.conf.template

# Set default environment variables for nginx template
ENV BACKEND_HOST=tintmeta-twenty-backend
ENV BACKEND_PORT=3200

# Set the correct backend URL for runtime injection
ARG REACT_APP_SERVER_BASE_URL
ENV REACT_APP_SERVER_BASE_URL=${REACT_APP_SERVER_BASE_URL:-http://localhost:3200}

# Create entrypoint script to handle environment substitution and runtime injection
RUN echo '#!/bin/sh' > /docker-entrypoint.sh && \
    echo '# Inject runtime environment variables into the frontend' >> /docker-entrypoint.sh && \
    echo 'cd /usr/share/nginx/html && /usr/local/bin/inject-runtime-env.sh' >> /docker-entrypoint.sh && \
    echo '# Generate nginx config from template' >> /docker-entrypoint.sh && \
    echo 'envsubst "\$BACKEND_HOST \$BACKEND_PORT" < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf' >> /docker-entrypoint.sh && \
    echo '# Start nginx' >> /docker-entrypoint.sh && \
    echo 'exec nginx -g "daemon off;"' >> /docker-entrypoint.sh && \
    chmod +x /docker-entrypoint.sh

# Set metadata and labels
LABEL org.opencontainers.image.source=https://github.com/twentyhq/twenty
LABEL org.opencontainers.image.description="Twenty frontend served by nginx with API proxying to backend"

EXPOSE 80

ENTRYPOINT ["/docker-entrypoint.sh"]